#pragma checksum "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bca924bef2dbe19e123e48a0e432af08ab38c228"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1;

#line default
#line hidden
#line 2 "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\_ViewImports.cshtml"
using WebApplication1.Models;

#line default
#line hidden
#line 5 "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\_ViewImports.cshtml"
using Kendo.Mvc.UI;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bca924bef2dbe19e123e48a0e432af08ab38c228", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3c991c98de87b674a95ab7dfd9d63f7447447b81", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\Home\Index.cshtml"
  
    ViewBag.Title = "Index";

#line default
#line hidden
            BeginContext(37, 1162, true);
            WriteLiteral(@"
<h2>Grid editing of Nullable Boolean</h2>

<script type=""text/javascript"">
    //define custom nullable boolean binder so the DropDownList can update the model and vice-versa
    kendo.data.binders.widget.nullableBoolean = kendo.data.Binder.extend({
        init: function (widget, bindings, options) {
            kendo.data.Binder.fn.init.call(this, widget.element[0], bindings, options);

            this.widget = widget;
            this._change = $.proxy(this.change, this);
            widget.bind(""change"", this._change);
        },

        refresh: function () {
            var that = this,
                value = that.bindings.nullableBoolean.get();

            that.widget.value(value !== null ? value.toString() : """");
        },

        change: function () {
            var that = this,
                value = that.widget.value(),
                modelValue = value === ""true"" ? true : value === ""false"" ? false : null;
            that.bindings.nullableBoolean.set(modelValue);");
            WriteLiteral("\r\n        },\r\n\r\n        destroy: function () {\r\n            this.widget.unbind(\"change\", this._change);\r\n        }\r\n    });\r\n</script>\r\n\r\n");
            EndContext();
            BeginContext(1201, 661, false);
#line 38 "C:\Work\examples\examples-core\grid-inline-editing-with-nullable-boolean\WebApplication1\Views\Home\Index.cshtml"
Write(Html.Kendo().Grid<WebApplication1.Models.Product>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName);
        columns.Bound(p => p.UnitsInStock).Width(100);
        columns.Bound(p => p.Available).Width(100);
        columns.Command(command => command.Edit()).Width(100);
    })
    .Pageable()
    .Sortable()
    .Filterable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Model(model =>
            {
                model.Id(p => p.ProductID);
            })
        .Read(read => read.Action("Read", "Home"))
        .Update(update => update.Action("Update", "Home"))
    )
);

#line default
#line hidden
            EndContext();
            BeginContext(1863, 4, true);
            WriteLiteral("\r\n\r\n");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
