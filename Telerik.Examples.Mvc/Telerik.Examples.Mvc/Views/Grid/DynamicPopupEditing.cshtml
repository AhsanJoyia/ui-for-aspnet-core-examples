
@{
    ViewData["Title"] = "Dynamic";
}

<h1>Dynamic Grid Binding</h1>

@model System.Data.DataTable
@(Html.Kendo().Grid<dynamic>()
    .Name("Grid")
    .Columns(columns =>
    {
        foreach (System.Data.DataColumn dcolumn in Model.Columns)
        {
            switch (dcolumn.DataType.ToString())
            {
                case "System.DateTime":
                    columns.Bound(dcolumn.ColumnName).Title(dcolumn.Caption).Format("{0:d}");
                    break;
                default:
                    columns.Bound(dcolumn.ColumnName).Title(dcolumn.Caption);
                    break;
            }
        }
        columns.Command(com => com.Edit());
    })
    .Pageable()
    .Sortable()
    .Editable(ed => ed.Mode(GridEditMode.PopUp).TemplateName("DynamicPopupEditor"))
    .Filterable()
    .Groupable()
        .DataSource(dataSource => dataSource
            .Ajax()
            .Model(model =>
            {
                var id = Model.PrimaryKey[0].ColumnName;
                model.Id(id);
                foreach (System.Data.DataColumn column in Model.Columns)
                {
                    var field = model.Field(column.ColumnName, column.DataType);
                    if (column.ColumnName == id) {
                        field.Editable(false);
                    }
                }
            })
            .Read(read => read.Action("Customers_Read", "DynamicPopupEditing"))
            .Update(read => read.Action("Customers_Update", "DynamicPopupEditing"))
    )
)
